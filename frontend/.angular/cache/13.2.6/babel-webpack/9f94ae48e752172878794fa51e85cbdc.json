{"ast":null,"code":"import _asyncToGenerator from \"/Users/macbook/Projects/php/cadastro-livros/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AutorComponent = class AutorComponent {\n  constructor(httpProvider, toastService) {\n    this.httpProvider = httpProvider;\n    this.toastService = toastService;\n    this.itemList = [];\n    this.carregando = false;\n    this.form = {\n      id: null,\n      Nome: null\n    };\n  }\n  ngOnInit() {\n    this.getAll();\n  }\n  getAll() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.carregando = true;\n      _this.httpProvider.read().subscribe(res => {\n        if (res != null && res.body.data != null) {\n          _this.itemList = res.body.data;\n          _this.carregando = false;\n        }\n      });\n    })();\n  }\n  removeToast(index) {\n    this.toastService.remove(index);\n  }\n  onCreate() {\n    if (!this.form.Nome) {\n      this.toastService.add('Preencha os campos obrigatório(s)', 3000, 'error');\n      return false;\n    }\n    if (!this.form.id) {\n      // create\n      this.httpProvider.create(this.form).subscribe(response => {\n        if (response) {\n          this.toastService.add(\"Dados salvos com sucesso!\", 3000, 'success');\n        }\n      });\n    } else {\n      //update\n      this.httpProvider.update(this.form).subscribe(response => {\n        if (response) {\n          this.toastService.add(\"Dados alterados com sucesso!\", 3000, 'success');\n        }\n      });\n    }\n    this.getAll();\n    return;\n  }\n};\nAutorComponent = __decorate([Component({\n  selector: 'app-autor',\n  templateUrl: './autor.component.html',\n  styleUrls: ['./autor.component.css']\n})], AutorComponent);\nexport { AutorComponent };","map":{"version":3,"names":["__decorate","Component","AutorComponent","constructor","httpProvider","toastService","itemList","carregando","form","id","Nome","ngOnInit","getAll","_this","_asyncToGenerator","read","subscribe","res","body","data","removeToast","index","remove","onCreate","add","create","response","update","selector","templateUrl","styleUrls"],"sources":["/Users/macbook/Projects/php/cadastro-livros/frontend/src/app/autor/autor.component.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AutorComponent = class AutorComponent {\n    constructor(httpProvider, toastService) {\n        this.httpProvider = httpProvider;\n        this.toastService = toastService;\n        this.itemList = [];\n        this.carregando = false;\n        this.form = {\n            id: null,\n            Nome: null\n        };\n    }\n    ngOnInit() {\n        this.getAll();\n    }\n    async getAll() {\n        this.carregando = true;\n        this.httpProvider.read()\n            .subscribe(res => {\n            if (res != null && res.body.data != null) {\n                this.itemList = res.body.data;\n                this.carregando = false;\n            }\n        });\n    }\n    removeToast(index) {\n        this.toastService.remove(index);\n    }\n    onCreate() {\n        if (!this.form.Nome) {\n            this.toastService.add('Preencha os campos obrigatório(s)', 3000, 'error');\n            return false;\n        }\n        if (!this.form.id) {\n            // create\n            this.httpProvider.create(this.form).subscribe((response) => {\n                if (response) {\n                    this.toastService.add(\"Dados salvos com sucesso!\", 3000, 'success');\n                }\n            });\n        }\n        else {\n            //update\n            this.httpProvider.update(this.form).subscribe((response) => {\n                if (response) {\n                    this.toastService.add(\"Dados alterados com sucesso!\", 3000, 'success');\n                }\n            });\n        }\n        this.getAll();\n        return;\n    }\n};\nAutorComponent = __decorate([\n    Component({\n        selector: 'app-autor',\n        templateUrl: './autor.component.html',\n        styleUrls: ['./autor.component.css']\n    })\n], AutorComponent);\nexport { AutorComponent };\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,QAAQ,eAAe;AACzC,IAAIC,cAAc,GAAG,MAAMA,cAAc,CAAC;EACtCC,WAAWA,CAACC,YAAY,EAAEC,YAAY,EAAE;IACpC,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,IAAI,GAAG;MACRC,EAAE,EAAE,IAAI;MACRC,IAAI,EAAE;IACV,CAAC;EACL;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,CAACC,MAAM,CAAC,CAAC;EACjB;EACMA,MAAMA,CAAA,EAAG;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACXD,KAAI,CAACN,UAAU,GAAG,IAAI;MACtBM,KAAI,CAACT,YAAY,CAACW,IAAI,CAAC,CAAC,CACnBC,SAAS,CAACC,GAAG,IAAI;QAClB,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,CAACC,IAAI,CAACC,IAAI,IAAI,IAAI,EAAE;UACtCN,KAAI,CAACP,QAAQ,GAAGW,GAAG,CAACC,IAAI,CAACC,IAAI;UAC7BN,KAAI,CAACN,UAAU,GAAG,KAAK;QAC3B;MACJ,CAAC,CAAC;IAAC;EACP;EACAa,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAAChB,YAAY,CAACiB,MAAM,CAACD,KAAK,CAAC;EACnC;EACAE,QAAQA,CAAA,EAAG;IACP,IAAI,CAAC,IAAI,CAACf,IAAI,CAACE,IAAI,EAAE;MACjB,IAAI,CAACL,YAAY,CAACmB,GAAG,CAAC,mCAAmC,EAAE,IAAI,EAAE,OAAO,CAAC;MACzE,OAAO,KAAK;IAChB;IACA,IAAI,CAAC,IAAI,CAAChB,IAAI,CAACC,EAAE,EAAE;MACf;MACA,IAAI,CAACL,YAAY,CAACqB,MAAM,CAAC,IAAI,CAACjB,IAAI,CAAC,CAACQ,SAAS,CAAEU,QAAQ,IAAK;QACxD,IAAIA,QAAQ,EAAE;UACV,IAAI,CAACrB,YAAY,CAACmB,GAAG,CAAC,2BAA2B,EAAE,IAAI,EAAE,SAAS,CAAC;QACvE;MACJ,CAAC,CAAC;IACN,CAAC,MACI;MACD;MACA,IAAI,CAACpB,YAAY,CAACuB,MAAM,CAAC,IAAI,CAACnB,IAAI,CAAC,CAACQ,SAAS,CAAEU,QAAQ,IAAK;QACxD,IAAIA,QAAQ,EAAE;UACV,IAAI,CAACrB,YAAY,CAACmB,GAAG,CAAC,8BAA8B,EAAE,IAAI,EAAE,SAAS,CAAC;QAC1E;MACJ,CAAC,CAAC;IACN;IACA,IAAI,CAACZ,MAAM,CAAC,CAAC;IACb;EACJ;AACJ,CAAC;AACDV,cAAc,GAAGF,UAAU,CAAC,CACxBC,SAAS,CAAC;EACN2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;AACvC,CAAC,CAAC,CACL,EAAE5B,cAAc,CAAC;AAClB,SAASA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}